import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { app, database } from "../firebaseConfig";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import {
  collection,
  addDoc,
  getDocs,
  doc,
  updateDoc,
  deleteDoc,
} from "firebase/firestore";

export default function Home() {
  const databaseRef = collection(database, "persons");

  const router = useRouter();

  const [name, setName] = useState("");
  const [age, setAge] = useState("");
  const [fireData, setFireData] = useState([]);
  const [isUpdate, setIsUpdate] = useState(false);
  const [ID, setID] = useState("");

  useEffect(() => {
    let token = sessionStorage.getItem("Token");

    if (!token) {
      router.push("/register");
    } else {
      getDatas();
    }
  }, []);

  const addData = () => {
    addDoc(databaseRef, { name: name, age: Number(age) })
      .then((response) => {
        alert("Data Added");
        setName("");
        setAge("");
        getDatas();
      })
      .catch((err) => {
        alert("Add Failed!");
      });
  };

  const getDatas = async () => {
    await getDocs(databaseRef).then((response) => {
      setFireData(
        response.docs.map((data) => {
          return { ...data.data(), id: data.id };
        })
      );
    });
  };

  const getData = (id, name, age) => {
    setID(id);
    setName(name);
    setAge(age);
    setIsUpdate(true);
  };

  const updateData = () => {
    let fieldToEdit = doc(database, "persons", ID);

    updateDoc(fieldToEdit, { name: name, age: Number(age) })
      .then((response) => {
        alert("Data Updated");
        setIsUpdate(false);
        setName("");
        setAge("");
        getDatas();
      })
      .catch((err) => {
        alert("Update Failed!");
      });
  };

  const deleteData = (id) => {
    let fieldToDelete = doc(database, "persons", id);

    deleteDoc(fieldToDelete)
      .then((response) => {
        alert("Data Deleted");
        setIsUpdate(false);
        setName("");
        setAge("");
        getDatas();
      })
      .catch((err) => {
        alert("Delete Failed!");
      });
  };

  const logout = () => {
    sessionStorage.removeItem("Token");
    router.push("/login");
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Nextjs Firebase Webapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.flex}>
          <h1>Home Page</h1>
          <button onClick={logout}>Log Out</button>
        </div>

        <input
          type="text"
          placeholder="Name"
          className={styles.inputBox}
          onChange={(event) => setName(event.target.value)}
          value={name}
        />
        <input
          type="number"
          placeholder="Age"
          className={styles.inputBox}
          onChange={(event) => setAge(event.target.value)}
          value={age}
        />

        {isUpdate ? (
          <button className={styles.button} onClick={updateData}>
            UPDATE
          </button>
        ) : (
          <button className={styles.button} onClick={addData}>
            ADD
          </button>
        )}

        <div>
          {fireData.map((data) => {
            return (
              <div key={data.id} className={styles.flex}>
                Name: <h3>{data.name}</h3>
                <hr width="40px" />
                Age: <h3>{data.age}</h3>
                <hr width="40px" />
                <button onClick={() => getData(data.id, data.name, data.age)}>
                  Update
                </button>
                <button onClick={() => deleteData(data.id)}>Delete</button>
              </div>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
